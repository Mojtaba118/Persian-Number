{"version":3,"sources":["../src/persianNumber.js"],"names":["PN","number","negative","decNumber","decimal","percent","isPercent","replace","getString","sliceNumber","isNegative","isDecimal","index","indexOf","decNumberStr","substr","length","parseInt","toString","oneDigit","decimalTypes","calculateDigits","decimals","numbers","separator","neg","dNum","n","d","putSeparator","split","numString","chunkSize","result","i","counter","reverse","join","arrNum","parsedNum","sadgan","Math","floor","dahgan","yekan","getPersian","getType","trim","dahganPlusYekan","threeDigits","twoDigits","isNaN","types","string","lIndex","lastIndexOf","undefined","res","module","exports"],"mappings":"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","sourcesContent":["const PN = new (class {\r\n  oneDigit = [\"صفر\", \"یک\", \"دو\", \"سه\", \"چهار\", \"پنج\", \"شش\", \"هفت\", \"هشت\", \"نه\"];\r\n  twoDigits = {\r\n    10: \"ده\",\r\n    11: \"یازده\",\r\n    12: \"دوازده\",\r\n    13: \"سیزده\",\r\n    14: \"چهارده\",\r\n    15: \"پانزده\",\r\n    16: \"شانزده\",\r\n    17: \"هفده\",\r\n    18: \"هجده\",\r\n    19: \"نوزده\",\r\n    20: \"بیست\",\r\n    30: \"سی\",\r\n    40: \"چهل\",\r\n    50: \"پنجاه\",\r\n    60: \"شصت\",\r\n    70: \"هفتاد\",\r\n    80: \"هشتاد\",\r\n    90: \"نود\"\r\n  };\r\n  threeDigits = {\r\n    100: \"صد\",\r\n    200: \"دویست\",\r\n    300: \"سیصد\",\r\n    400: \"چهارصد\",\r\n    500: \"پانصد\",\r\n    600: \"شش صد\",\r\n    700: \"هفت صد\",\r\n    800: \"هشت صد\",\r\n    900: \"نه صد\"\r\n  };\r\n\r\n  types = [\"تلیارد\", \"میلیارد\", \"میلیون\", \"هزار\", \"\"];\r\n  decimalTypes = [\"دهم\", \"صدم\", \"هزارم\", \"ده هزارم\"];\r\n  numbers = [];\r\n  decimals = [];\r\n  //Convert Number To Words\r\n  convert = number => {\r\n    let negative = \"\";\r\n    let decNumber = \"\";\r\n    let decimal = \"\";\r\n    let percent = \"\";\r\n\r\n    if (this.isPercent(number)) {\r\n      number = number.replace(\"%\", \"\");\r\n      percent = \" درصد\";\r\n    }\r\n\r\n    number = this.getString(number);\r\n    if (number == \"\") return \"\";\r\n    this.sliceNumber(number);\r\n    if (this.isNegative(number)) negative = \"منفی \";\r\n    number = number.replace(\"-\", \"\");\r\n\r\n    if (this.isDecimal(number)) {\r\n      let index = number.indexOf(\".\");\r\n      let decNumberStr = \"\";\r\n\r\n      decNumber = number.substr(index + 1, number.length);\r\n      number = number.substr(0, index);\r\n      decNumberStr = parseInt(decNumber).toString();\r\n\r\n      if (decNumberStr.length === 1 && decNumberStr != \"0\") {\r\n        decimal += this.oneDigit[decNumberStr] + \" \";\r\n        decimal += this.decimalTypes[decNumber.length - 1];\r\n      } else {\r\n        decimal = this.calculateDigits(this.decimals);\r\n        decimal += \" \" + this.decimalTypes[decNumber.length - 1];\r\n      }\r\n    }\r\n\r\n    if (number.length === 1) {\r\n      if (!decimal) {\r\n        return negative + this.oneDigit[number] + percent;\r\n      }\r\n\r\n      if (number == \"0\") {\r\n        return negative + decimal + percent;\r\n      }\r\n\r\n      return negative + this.oneDigit[number] + \" ممیز \" + decimal + percent;\r\n    }\r\n\r\n    if (!decimal) {\r\n      return negative + this.calculateDigits(this.numbers) + percent;\r\n    }\r\n\r\n    return (\r\n      negative +\r\n      this.calculateDigits(this.numbers) +\r\n      \" ممیز \" +\r\n      decimal +\r\n      percent\r\n    );\r\n  };\r\n\r\n  //split number 3 by 3 with a separator (123456789.3025=>123,456,789.3,025) Do Not Give It Persian Numbers\r\n  sliceNumber = (number, separator = \",\") => {\r\n    let percent = \"\";\r\n    let neg = \"\";\r\n    let dNum = \"\";\r\n    let n = \"\";\r\n    let d = \"\";\r\n\r\n    if (this.isPercent(number)) {\r\n      number = number.replace(\"%\", \"\");\r\n      percent = \"%\";\r\n    }\r\n\r\n    number = this.getString(number);\r\n\r\n    if (number == \"\") return \"\";\r\n    if (this.isNegative(number)) neg = \"-\";\r\n\r\n    number = number.replace(\"-\", \"\");\r\n\r\n    if (this.isDecimal(number)) {\r\n      let index = number.indexOf(\".\");\r\n      dNum = number.substr(index + 1, number.length);\r\n      number = number.substr(0, index);\r\n    }\r\n\r\n    n = this.putSeparator(number, 3, separator);\r\n    this.numbers = n.split(separator);\r\n\r\n    if (!dNum) return neg + n + percent;\r\n\r\n    d = this.putSeparator(dNum, 3, separator);\r\n    this.decimals = d.split(separator);\r\n\r\n    return neg + n + \".\" + d + percent;\r\n  };\r\n\r\n  //Puts a separator between the chunks of the given numString.\r\n  putSeparator = (numString, chunkSize = 3, separator = \",\") => {\r\n    if (typeof numString !== \"string\") return \"\";\r\n    if (numString.length < chunkSize + 1) return numString;\r\n\r\n    let result = \"\";\r\n    for (let i = numString.length - 1, counter = 0; i >= 0; i--) {\r\n      if (counter == chunkSize) {\r\n        result += separator;\r\n        counter = 0;\r\n      }\r\n      result += numString[i];\r\n      counter++;\r\n    }\r\n\r\n    result = result\r\n      .split(\"\")\r\n      .reverse()\r\n      .join(\"\");\r\n    return result;\r\n  };\r\n\r\n  //Processing on Digits of A Number\r\n  calculateDigits = arrNum => {\r\n    let result = \"\";\r\n    for (let i = 0; i < arrNum.length; i++) {\r\n      let parsedNum = parseInt(arrNum[i]);\r\n      let number = parsedNum;\r\n      let sadgan = Math.floor(number / 100) * 100;\r\n      number = number % 100;\r\n      let dahgan = Math.floor(number / 10) * 10;\r\n      let yekan = number % 10;\r\n      result += i !== 0 && parsedNum ? \" و \" : \"\";\r\n\r\n      result +=\r\n        this.getPersian(sadgan, dahgan, yekan, i, arrNum) +\r\n        \" \" +\r\n        this.getType(i, arrNum);\r\n    }\r\n\r\n    return result.trim();\r\n  };\r\n\r\n  //Main Process That Turn a Number Into a String(122=>100+20+2)\r\n  getPersian = (sadgan, dahgan, yekan, index, numbers) => {\r\n    let result = \"\";\r\n    let dahganPlusYekan = dahgan + yekan;\r\n\r\n    if (this.threeDigits[sadgan]) {\r\n      result +=\r\n        yekan > 0 || dahgan > 0\r\n          ? this.threeDigits[sadgan] + \" و \"\r\n          : this.threeDigits[sadgan];\r\n    }\r\n\r\n    if (this.twoDigits[dahganPlusYekan]) {\r\n      result += this.twoDigits[dahganPlusYekan] + \" \";\r\n      return result;\r\n    }\r\n\r\n    if (this.twoDigits[dahgan]) {\r\n      result += this.twoDigits[dahgan] + \" و \";\r\n    }\r\n\r\n    if (\r\n      numbers.length === 2 &&\r\n      index === 0 &&\r\n      yekan === 1 &&\r\n      dahgan === 0 &&\r\n      sadgan === 0\r\n    ) {\r\n      return result;\r\n    }\r\n\r\n    if (\r\n      numbers.length > 2 &&\r\n      index === numbers.length - 2 &&\r\n      yekan === 1 &&\r\n      dahgan === 0 &&\r\n      sadgan === 0\r\n    ) {\r\n      return result;\r\n    }\r\n\r\n    if (yekan > 0) result += this.oneDigit[yekan] + \" \";\r\n\r\n    return result;\r\n  };\r\n\r\n  //getting The Type Of Each Number (Billion, Million,...)\r\n  getType = (i, numbers) => {\r\n    let parsedNum = parseInt(numbers[i]);\r\n    if (isNaN(parsedNum)) return \"\";\r\n    if (!parsedNum) return \"\";\r\n    let length = numbers.length - i;\r\n    let index = this.types.length - length;\r\n    return this.types[index];\r\n  };\r\n\r\n  //Calculate if number:String is Negative Or Not\r\n  isNegative = number => {\r\n    number = this.getString(number);\r\n    if (!number) return false;\r\n    if (number[0] != \"-\") return false;\r\n    number = number.replace(\"-\", \"\");\r\n    return number != \"0\";\r\n  };\r\n\r\n  //Calculate if number:String has '%' as Percent\r\n  isPercent = string => {\r\n    if (typeof string !== \"string\") return false;\r\n    let index = string.indexOf(\"%\");\r\n    let lIndex = string.lastIndexOf(\"%\");\r\n    if (index != lIndex) return false;\r\n    return index > 0;\r\n  };\r\n\r\n  //is number:String:Number is a Valid Number? if type is Number turn it to String And Return it\r\n  getString = number => {\r\n    if (number === undefined) return \"\";\r\n    if (number === null) return \"\";\r\n    if (isNaN(number)) return \"\";\r\n    if (typeof number === \"number\") return number.toString();\r\n    return number.trim();\r\n  };\r\n\r\n  //Calculate if number:String has Decimal Point Or Not\r\n  isDecimal = number => {\r\n    number = this.getString(number);\r\n    if (number == \"\") return false;\r\n    let index = number.indexOf(\".\");\r\n    let lIndex = number.lastIndexOf(\".\");\r\n    if (index != lIndex) return false;\r\n    return index > 0;\r\n  };\r\n  //Convert English Numbers To Persian Numbers\r\n  convertEnToPe = number => {\r\n    if (number == null || number == undefined) return \"\";\r\n    if (typeof number == \"number\") number = number.toString();\r\n    let res = \"\";\r\n    for (let i = 0; i < number.length; i++) {\r\n      if (number[i] === \"\\u0030\") res += \"\\u06F0\";\r\n      else if (number[i] === \"\\u0031\") res += \"\\u06F1\";\r\n      else if (number[i] === \"\\u0032\") res += \"\\u06F2\";\r\n      else if (number[i] === \"\\u0033\") res += \"\\u06F3\";\r\n      else if (number[i] === \"\\u0034\") res += \"\\u06F4\";\r\n      else if (number[i] === \"\\u0035\") res += \"\\u06F5\";\r\n      else if (number[i] === \"\\u0036\") res += \"\\u06F6\";\r\n      else if (number[i] === \"\\u0037\") res += \"\\u06F7\";\r\n      else if (number[i] === \"\\u0038\") res += \"\\u06F8\";\r\n      else if (number[i] === \"\\u0039\") res += \"\\u06F9\";\r\n      else res += number[i];\r\n    }\r\n    return res;\r\n  };\r\n  //Convert Persian Numbers To English Numbers\r\n  convertPeToEn = number => {\r\n    if (number == null || number == undefined) return \"\";\r\n    let res = \"\";\r\n    for (let i = 0; i < number.length; i++) {\r\n      if (number[i] === \"\\u06F0\") res += \"\\u0030\";\r\n      else if (number[i] === \"\\u06F1\") res += \"\\u0031\";\r\n      else if (number[i] === \"\\u06F2\") res += \"\\u0032\";\r\n      else if (number[i] === \"\\u06F3\") res += \"\\u0033\";\r\n      else if (number[i] === \"\\u06F4\") res += \"\\u0034\";\r\n      else if (number[i] === \"\\u06F5\") res += \"\\u0035\";\r\n      else if (number[i] === \"\\u06F6\") res += \"\\u0036\";\r\n      else if (number[i] === \"\\u06F7\") res += \"\\u0037\";\r\n      else if (number[i] === \"\\u06F8\") res += \"\\u0038\";\r\n      else if (number[i] === \"\\u06F9\") res += \"\\u0039\";\r\n      else res += number[i];\r\n    }\r\n    return res;\r\n  };\r\n})();\r\n\r\nmodule.exports = exports = PN;\r\n"],"file":"persianNumber.js"}